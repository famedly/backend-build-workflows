name: Rust workflow

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        default: ubuntu-latest-16core

# Environment variables for all jobs.
env:
  CARGO_TERM_COLOR: always
  ADDITIONAL_PACKAGES: ""

# Defined CI jobs.
jobs:
  check:
    runs-on: ${{ inputs.runs-on }}
    container: ghcr.io/famedly/rust-container:nightly
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v3
      with:
        path: head

    - uses: famedly/backend-build-workflows/.github/actions/rust-prepare@main
      with:
        gitlab_ssh: ${{ secrets.CI_SSH_PRIVATE_KEY}}
        gitlab_user: ${{ secrets.GITLAB_USER }}
        gitlab_pass: ${{ secrets.GITLAB_PASS }}
    
    - name: Caching
      uses: Swatinem/rust-cache@b8a6852b4f997182bdea832df3f9e153038b5191
      with:
        workspaces: "head -> target"

    - name: Rustfmt
      working-directory: head
      run: cargo +${NIGHTLY_VERSION} fmt -- --check

    - name: Clippy
      working-directory: head
      run: cargo lints clippy --workspace --all-targets -- -D warnings
    
    - name: Test & Coverage
      working-directory: head
      run: cargo llvm-cov nextest --workspace --lcov --output-path $GITHUB_WORKSPACE/new-cov.lcov
    
    - name: Doc-test
      working-directory: head
      run: cargo +${NIGHTLY_VERSION} test --doc --workspace --verbose

    - name: Udeps
      working-directory: head
      run: cargo +${NIGHTLY_VERSION} udeps
    
    - name: Typos
      uses: crate-ci/typos@ef5fcf92dfbd679f97c0371159e143852f7b1eb1
      with: 
        files: ./head

    - name: Load base coverage results from cache
      if: github.event_name == 'pull_request'
      id: cache-coverage
      uses: actions/cache@v3
      with:
        path: ./old-cov.lcov
        key: coverage-${{ github.event.pull_request.base.sha }}

    - name: Pull base
      uses: actions/checkout@v3
      if: github.event_name == 'pull_request' && steps.cache-primes.outputs.cache-hit != 'true'
      with:
        ref: ${{ github.event.pull_request.base.ref }}
        repository: ${{ github.event.pull_request.base.full_name }}
        path: base   

    - name: Generate base coverage
      if: github.event_name == 'pull_request' && steps.cache-primes.outputs.cache-hit != 'true'
      working-directory: base
      run:
        cargo llvm-cov nextest --workspace --lcov --output-path $GITHUB_WORKSPACE/old-cov.lcov
  
    - name: Meow Coverage
      id: coverage-report
      uses: famedly/meow-coverage@main
      if: github.event_name == 'pull_request'
      with:
        new-lcov-file: 'new-cov.lcov'
        old-lcov-file: ${{ github.event_name == 'pull_request' && 'old-cov.lcov' || '' }}
        source-prefix: 'src/'
        pr-number: ${{ github.event_name == 'pull_request' && github.event.pull_request.number || '' }}
        repo-name: ${{ github.repository }}
        commit-id: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.event.after }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
