name: Rust workflow

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        default: ubuntu-latest

      run-doctests:
        description: |
          Whether to run doctests.

          Pure binary repos may not want this due to a long standing
          cargo bug: https://github.com/rust-lang/cargo/issues/5477
        required: false
        type: boolean
        default: true

      clippy_args: {required: false, type: string, default: ""}
      test_args: {required: false, type: string, default: ""}
      testcov_args: {required: false, type: string, default: ""}
      udeps_args: {required: false, type: string, default: ""}
      ref:
        description: "The ref/version of this workflow; used to pull the correct dependency versions"
        type: string

    secrets:
      CI_SSH_PRIVATE_KEY:
        required: false
        description: |
          Private SSH key to use for cargo dependencies that need to
          either be fetched from private GitHub repositories or a
          private registry.
      CODECOV_TOKEN:
        required: false
        description: |
          Token to use when publishing code coverage results to
          codecov. If not specified, the coverage parts of this job
          will fail, however requiring secrets means that the
          `inherit` syntax does not work.

# Environment variables for all jobs.
env:
  CARGO_TERM_COLOR: always
  ADDITIONAL_PACKAGES: ""

# Defined CI jobs.
jobs:
  rust-lints:
    runs-on: ${{ inputs.runs-on }}
    container: docker-oss.nexus.famedly.de/rust-container:nightly
    steps:
    - name: Checkout workflow dependencies
      uses: actions/checkout@v4
      with:
        repository: famedly/backend-build-workflows
        ref: ${{ inputs.ref }}

    - uses: ./.github/actions/rust-prepare
      with:
        gitlab_ssh: ${{ secrets.CI_SSH_PRIVATE_KEY}}
        gitlab_user: ${{ secrets.GITLAB_USER }}
        gitlab_pass: ${{ secrets.GITLAB_PASS }}

    - name: Checkout the repository to test
      uses: actions/checkout@v4

    - name: Caching
      uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0

    - name: Rustfmt
      shell: bash
      run: cargo +${NIGHTLY_VERSION} fmt -- --check

    - name: Clippy
      shell: bash
      run: cargo clippy --workspace --all-targets ${{inputs.clippy_args}} -- -D warnings

    - name: Udeps
      shell: bash
      run: cargo +${NIGHTLY_VERSION} udeps ${{inputs.udeps_args}}

    - name: Typos
      shell: bash
      run: typos # TODO: Use the typos action

  rust-tests:
    runs-on: ${{ inputs.runs-on }}
    container: docker-oss.nexus.famedly.de/rust-container:nightly
    steps:
    - name: Checkout workflow dependencies
      uses: actions/checkout@v4
      with:
        repository: famedly/backend-build-workflows
        ref: ${{ inputs.ref }}

    - uses: ./.github/actions/rust-prepare
      with:
        gitlab_ssh: ${{ secrets.CI_SSH_PRIVATE_KEY}}
        gitlab_user: ${{ secrets.GITLAB_USER }}
        gitlab_pass: ${{ secrets.GITLAB_PASS }}

    - name: Checkout the repository to test
      uses: actions/checkout@v4

    - name: Caching
      uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0

    - name: Test
      shell: bash
      run: cargo llvm-cov nextest --profile ci --workspace --lcov --output-path lcov.info ${{inputs.testcov_args}}

    - name: Doc-test
      shell: bash
      if: inputs.run-doctests
      run: cargo +${NIGHTLY_VERSION} test --doc --workspace --verbose ${{inputs.test_args}}

    - name: Codecov - Upload coverage
      uses: codecov/codecov-action@v4
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        files: "lcov.info"

    - name: Codecov - Upload test results
      uses: codecov/test-results-action@v1
      with:
        token: ${{secrets.CODECOV_TOKEN}}
