name: Rust workflow

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        default: ubuntu-latest-16core

# Environment variables for all jobs.
env:
  CARGO_TERM_COLOR: always
  ADDITIONAL_PACKAGES: ""

# Defined CI jobs.
jobs:
  check:
    runs-on: ${{ inputs.runs-on }}
    container: ghcr.io/famedly/rust-container:nightly
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v3
      with:
        path: head

    - uses: famedly/backend-build-workflows/.github/actions/rust-prepare@main
      with:
        gitlab_ssh: ${{ secrets.CI_SSH_PRIVATE_KEY}}
        gitlab_user: ${{ secrets.GITLAB_USER }}
        gitlab_pass: ${{ secrets.GITLAB_PASS }}

    - name: Caching
      uses: Swatinem/rust-cache@b8a6852b4f997182bdea832df3f9e153038b5191
      with:
        workspaces: "head -> target"
        cache-on-failure: true

    - name: Rustfmt
      shell: bash
      working-directory: head
      run: cargo +${NIGHTLY_VERSION} fmt -- --check

    - name: Clippy
      working-directory: head
      shell: bash
      run: cargo +${NIGHTLY_VERSION} clippy --workspace --all-targets -- -D warnings

    - name: Udeps
      shell: bash
      working-directory: head
      run: cargo +${NIGHTLY_VERSION} udeps

    - name: Typos
      shell: bash
      working-directory: head
      run: typos


  test:
    runs-on: ${{ inputs.runs-on }}
    container: ghcr.io/famedly/rust-container:nightly
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v3
      with:
        path: head

    - uses: famedly/backend-build-workflows/.github/actions/rust-prepare@main
      with:
        gitlab_ssh: ${{ secrets.CI_SSH_PRIVATE_KEY}}
        gitlab_user: ${{ secrets.GITLAB_USER }}
        gitlab_pass: ${{ secrets.GITLAB_PASS }}

    - name: Caching
      uses: Swatinem/rust-cache@b8a6852b4f997182bdea832df3f9e153038b5191
      with:
        workspaces: "head -> target"
        cache-on-failure: true
        # Turn this on if your test isn't running in a container
        # cache-all-crates: true

    - name: Test
      timeout-minutes: 20
      shell: bash
      working-directory: head
      run: cargo llvm-cov --no-report nextest --no-fail-fast --workspace

    - name: Doc-test
      shell: bash
      working-directory: head
      # Nextest doesn't support doctests, so we need to run this separately
      run: cargo +${NIGHTLY_VERSION} llvm-cov --no-report --doc --workspace --verbose

    - name: Merge coverage
      shell: bash
      working-directory: head
      run: |
        cargo +${NIGHTLY_VERSION} llvm-cov report --doctests --lcov --output-path lcov.info
        sed "s|$PWD/||g" -i lcov.info

    - uses: actions/upload-artifact@v4
      with:
        name: coverage-data
        path: head/lcov.info
